#!/usr/bin/env python3

import argparse
import logging
import sys

from src.parser import SSHEnvironment
from src.logger import *

logger = logging.getLogger('octodon')


if __name__ == "__main__":
    logger.info("ADFASDFA")
    ssh_config = SSHEnvironment()
    parser = argparse.ArgumentParser(
        formatter_class=argparse.RawDescriptionHelpFormatter,
        description="Octodon SSH environments selector and editor.")
    parser.add_argument("-g", "--gui", action="store_true",
                        help="start the graphical interface")
    parser.add_argument("-l", "--list", action="store_true",
                        help="list all available environments")
    parser.add_argument("-a", "--activate", help="activate an environment")
    parser.add_argument("-d", "--delete", help="delete an environment. WARNING: This will delete your keys as well!")
    args = parser.parse_args()

    if not len(sys.argv) > 1:
        parser.print_help()

    if args.gui:
        print("Run the GUI")
        #gui = GUI()

    if args.list:
        envs = ssh_config.get_environments()
        print("Environments available:\n")
        for env in envs:
            print(f"* {env}")

    if args.activate:
        ssh_config.activate_environment(args.activate)

    if args.delete:
        confirmation = input(f"Are you sure? This will delete '{args.delete}', its configuration and keys! (yes/NO)")
        if confirmation == 'yes':
            ssh_config.delete_environment(args.delete)
        else:
            print(f"Deletion of {args.delete} aborted.")
            sys.exit()
else:
    logger.error("ERROR: This program has to be run from the command line.")
    sys.exit("This program has to be run from the command line.")
